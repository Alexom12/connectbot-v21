import os
import django
import asyncio

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

async def test_anonymous_coffee():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –¢–∞–π–Ω–æ–≥–æ –∫–æ—Ñ–µ...")
    
    from activities.services.anonymous_coffee_service import anonymous_coffee_service
    from activities.models import ActivitySession, ActivityParticipant
    from employees.models import Employee
    from django.utils import timezone
    from datetime import timedelta
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    from asgiref.sync import sync_to_async
    employees = await sync_to_async(list)(Employee.objects.all()[:4])
    
    if len(employees) < 2:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    today = timezone.now().date()
    week_start = today - timedelta(days=today.weekday())
    
    session, created = await sync_to_async(ActivitySession.objects.get_or_create)(
        activity_type='secret_coffee',
        week_start=week_start,
        defaults={'status': 'planned'}
    )
    
    print(f"üìã –°–µ—Å—Å–∏—è secret_coffee: {'—Å–æ–∑–¥–∞–Ω–∞' if created else '—Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–µ—Å—Å–∏—é
    for i, employee in enumerate(employees[:4]):  # –ë–µ—Ä–µ–º –º–∞–∫—Å–∏–º—É–º 4 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        participant, created = await sync_to_async(ActivityParticipant.objects.get_or_create)(
            employee=employee,
            activity_session=session,
            defaults={'subscription_status': True}
        )
        if created:
            print(f"   + {employee.full_name} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫")
    
    print(f"1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ matching –¥–ª—è {len(employees)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
    success = await anonymous_coffee_service.run_weekly_matching()
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—Ö' if success else '‚ùå –û—à–∏–±–∫–∞'}")
    
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á...")
    from activities.models import SecretCoffeeMeeting
    try:
        meetings_count = await sync_to_async(SecretCoffeeMeeting.objects.count)()
        print(f"   –°–æ–∑–¥–∞–Ω–æ –≤—Å—Ç—Ä–µ—á: {meetings_count}")
        
        if meetings_count > 0:
            meetings = await sync_to_async(list)(
                SecretCoffeeMeeting.objects.select_related('employee1', 'employee2').all()[:2]
            )
            for meeting in meetings:
                print(f"   - –í—Å—Ç—Ä–µ—á–∞ {meeting.meeting_id}: {meeting.employee1.full_name} & {meeting.employee2.full_name}")
                print(f"     –ö–æ–¥—ã: {meeting.employee1_code} / {meeting.employee2_code}")
                print(f"     –ó–Ω–∞–∫: {meeting.recognition_sign}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å—Ç—Ä–µ—á: {e}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –∫–æ—Ñ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_anonymous_coffee())