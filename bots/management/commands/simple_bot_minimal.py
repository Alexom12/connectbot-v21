"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏
"""
import logging
import sys
from django.core.management.base import BaseCommand
from django.conf import settings
from bots.utils.message_utils import reply_with_footer

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞'

    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã"""
        
        if not settings.TELEGRAM_BOT_TOKEN:
            self.stdout.write(self.style.ERROR('TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'))
            return
        
        self.stdout.write("ü§ñ ConnectBot v21 - –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫")
        self._run_simple_bot()

    def _run_simple_bot(self):
        """–ó–∞–ø—É—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –±–æ—Ç–∞"""
        try:
            from telegram.ext import Application, CommandHandler
            
            self.stdout.write('–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞...')
            
            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            app = Application.builder().token(settings.TELEGRAM_BOT_TOKEN).build()
            
            # –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
            async def start(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç {update.effective_user.first_name}")
                try:
                    user = update.effective_user
                    message = f"""üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

ü§ñ –Ø ConnectBot v21 - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π!

üìã –ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚òï –¢–∞–π–Ω—ã–π –∫–æ—Ñ–µ - –Ω–∞–π–¥–∏ –∫–æ–ª–ª–µ–≥—É –¥–ª—è –∫–æ—Ñ–µ-–±—Ä–µ–π–∫–∞
üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - —É—á–∞—Å—Ç–≤—É–π –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π —Å–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - —É–ø—Ä–∞–≤–ª—è–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."""
                    await reply_with_footer(update, message)
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")
            
            async def help_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """üîß *CONNECTBOT V21 - –°–ü–†–ê–í–ö–ê*

üéØ *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ó–∞–ø—É—Å–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

‚òï *–¢–∞–π–Ω—ã–π –∫–æ—Ñ–µ:*
/coffee - –£—á–∞—Å—Ç–∏–µ –≤ –¢–∞–π–Ω–æ–º –∫–æ—Ñ–µ
/preferences - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å—Ç—Ä–µ—á

üéØ *–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:*
/activities - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
/stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üë§ *–ü—Ä–æ—Ñ–∏–ª—å:*
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏

üß™ *–¢–µ—Å—Ç:*
/test - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã

üöÄ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ!"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def coffee_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /coffee –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """‚òï *–¢–ê–ô–ù–´–ô –ö–û–§–ï*

ü§´ –ê–Ω–æ–Ω–∏–º–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–ª–ª–µ–≥–æ–π
üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /preferences –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
üéØ –ú–∞—Ç—á–∏–Ω–≥ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º

üí° –î–ª—è —É—á–∞—Å—Ç–∏—è –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def activities_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /activities –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """üéØ *–ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ï –ê–ö–¢–ò–í–ù–û–°–¢–ò*

‚òï /coffee - –¢–∞–π–Ω—ã–π –∫–æ—Ñ–µ
‚ôüÔ∏è –®–∞—Ö–º–∞—Ç–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä
üèì –ù–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å
üì∏ –§–æ—Ç–æ–∫–≤–µ—Å—Ç—ã
üß† –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã

üìä /stats - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚öôÔ∏è /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def profile_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /profile –æ—Ç {update.effective_user.first_name}")
                try:
                    user = update.effective_user
                    message = f"""üë§ *–ú–û–ô –ü–†–û–§–ò–õ–¨*

üÜî ID: {user.id}
üëã –ò–º—è: {user.first_name}
üìû Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üìä /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
‚öôÔ∏è /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
‚òï /preferences - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¢–∞–π–Ω–æ–≥–æ –∫–æ—Ñ–µ"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def settings_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /settings –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """‚öôÔ∏è *–ù–ê–°–¢–†–û–ô–ö–ò*

üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω—ã
‚è∞ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: 09:00-18:00
üì± –§–æ—Ä–º–∞—Ç: Telegram

‚òï /preferences - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¢–∞–π–Ω–æ–≥–æ –∫–æ—Ñ–µ
üîï /notifications - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

üí° –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –±–æ–ª—å—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫!"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def stats_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /stats –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """üìä *–ú–û–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê*

‚òï *–¢–∞–π–Ω—ã–π –∫–æ—Ñ–µ:*
   ‚îî –í—Å—Ç—Ä–µ—á: 0
   ‚îî –†–µ–π—Ç–∏–Ω–≥: –Ω–æ–≤–∏—á–æ–∫

üéØ *–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:*
   ‚îî –£—á–∞—Å—Ç–∏–π: 0
   ‚îî –û—á–∫–æ–≤: 0

üìà *–û–±—â–µ–µ:*
   ‚îî –î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: 1
   ‚îî –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –Ω–∞—á–∏–Ω–∞—é—â–∏–π

üí° –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö –¥–ª—è —Ä–æ—Å—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def preferences_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /preferences –æ—Ç {update.effective_user.first_name}")
                try:
                    message = """‚òï *–ù–ê–°–¢–†–û–ô–ö–ò –¢–ê–ô–ù–û–ì–û –ö–û–§–ï*

ÔøΩ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
üíª –§–æ—Ä–º–∞—Ç –≤—Å—Ç—Ä–µ—á: –Ω–µ —É–∫–∞–∑–∞–Ω
üéØ –¢–µ–º—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤: –Ω–µ –≤—ã–±—Ä–∞–Ω—ã

‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è
‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç (–æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω)
‚Ä¢ –û—Ç–º–µ—Ç—å—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–º—ã

üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!"""
                    await reply_with_footer(update, message, parse_mode='Markdown')
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")

            async def test_cmd(update, context):
                self.stdout.write(f"–ö–æ–º–∞–Ω–¥–∞ /test –æ—Ç {update.effective_user.first_name}")
                try:
                    await reply_with_footer(update, "‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª! –í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
                    self.stdout.write("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                except Exception as e:
                    self.stdout.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            app.add_handler(CommandHandler("start", start))
            app.add_handler(CommandHandler("help", help_cmd))
            app.add_handler(CommandHandler("menu", help_cmd))  # menu = help
            app.add_handler(CommandHandler("coffee", coffee_cmd))
            app.add_handler(CommandHandler("activities", activities_cmd))
            app.add_handler(CommandHandler("profile", profile_cmd))
            app.add_handler(CommandHandler("settings", settings_cmd))
            app.add_handler(CommandHandler("stats", stats_cmd))
            app.add_handler(CommandHandler("preferences", preferences_cmd))
            app.add_handler(CommandHandler("test", test_cmd))
            
            self.stdout.write('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
            self.stdout.write('üöÄ –ó–∞–ø—É—Å–∫ polling...')
            
            # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ polling
            app.run_polling(drop_pending_updates=True)
            
        except KeyboardInterrupt:
            self.stdout.write(self.style.WARNING('–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C'))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'–û—à–∏–±–∫–∞: {e}'))
            import traceback
            traceback.print_exc()