"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Telegram API
"""
import os
import requests
import socket
import ssl
import time
from urllib.parse import urlparse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

import django
django.setup()

from django.conf import settings

def test_dns_resolution():
    """–¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è DNS"""
    print("=== –¢–µ—Å—Ç DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è ===")
    try:
        ip = socket.gethostbyname('api.telegram.org')
        print(f"‚úÖ api.telegram.org —Ä–∞–∑—Ä–µ—à–µ–Ω –≤ IP: {ip}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: {e}")
        return False

def test_tcp_connection():
    """–¢–µ—Å—Ç TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print("\\n=== –¢–µ—Å—Ç TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ===")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(10)
        result = sock.connect_ex(('api.telegram.org', 443))
        sock.close()
        
        if result == 0:
            print("‚úÖ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ api.telegram.org:443 —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ api.telegram.org:443, –∫–æ–¥: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_ssl_handshake():
    """–¢–µ—Å—Ç SSL —Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏—è"""
    print("\\n=== –¢–µ—Å—Ç SSL —Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏—è ===")
    try:
        context = ssl.create_default_context()
        with socket.create_connection(('api.telegram.org', 443), timeout=10) as sock:
            with context.wrap_socket(sock, server_hostname='api.telegram.org') as ssock:
                print(f"‚úÖ SSL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
                print(f"   –í–µ—Ä—Å–∏—è SSL: {ssock.version()}")
                print(f"   –®–∏—Ñ—Ä: {ssock.cipher()}")
                return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SSL: {e}")
        return False

def test_http_request():
    """–¢–µ—Å—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞"""
    print("\\n=== –¢–µ—Å—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞ ===")
    token = settings.TELEGRAM_BOT_TOKEN
    url = f"https://api.telegram.org/bot{token}/getMe"
    
    try:
        print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞: {url[:50]}...")
        response = requests.get(url, timeout=30)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data.get('result', {})
                print(f"‚úÖ HTTP –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω!")
                print(f"   –ò–º—è –±–æ—Ç–∞: {bot_info.get('first_name')}")
                print(f"   Username: @{bot_info.get('username')}")
                return True
            else:
                print(f"‚ùå Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data}")
                return False
        else:
            print(f"‚ùå HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞ (30 —Å–µ–∫)")
        return False
    except requests.exceptions.SSLError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SSL –≤ HTTP –∑–∞–ø—Ä–æ—Å–µ: {e}")
        return False
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ HTTP –∑–∞–ø—Ä–æ—Å–µ: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_alternative_endpoints():
    """–¢–µ—Å—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö endpoints"""
    print("\\n=== –¢–µ—Å—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö endpoints ===")
    
    endpoints = [
        "https://api.telegram.org",
        "https://149.154.167.220",  # –û–¥–∏–Ω –∏–∑ IP Telegram
        "https://telegram.org"
    ]
    
    for endpoint in endpoints:
        try:
            print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º {endpoint}...")
            response = requests.get(endpoint, timeout=10, verify=False)
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

def test_proxy_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–∫—Å–∏"""
    print("\\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ ===")
    
    proxy_vars = ['HTTP_PROXY', 'HTTPS_PROXY', 'http_proxy', 'https_proxy']
    proxy_found = False
    
    for var in proxy_vars:
        value = os.environ.get(var)
        if value:
            print(f"   –ù–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è {var}: {value}")
            proxy_found = True
    
    if not proxy_found:
        print("   ‚úÖ –ü—Ä–æ–∫—Å–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def test_firewall():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–æ–º"""
    print("\\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ ===")
    
    test_sites = [
        "https://google.com",
        "https://github.com",
        "https://httpbin.org/ip"
    ]
    
    for site in test_sites:
        try:
            response = requests.get(site, timeout=5)
            print(f"   ‚úÖ {site}: –¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå {site}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API")
    print("=" * 50)
    
    print(f"–¢–æ–∫–µ–Ω: {settings.TELEGRAM_BOT_TOKEN[:20]}...")
    
    results = []
    results.append(("DNS", test_dns_resolution()))
    results.append(("TCP", test_tcp_connection()))
    results.append(("SSL", test_ssl_handshake()))
    results.append(("HTTP", test_http_request()))
    
    test_alternative_endpoints()
    test_proxy_settings()
    test_firewall()
    
    print("\\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    
    success_count = 0
    for test_name, success in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if success else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"   {test_name}: {status}")
        if success:
            success_count += 1
    
    print(f"\\n–£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {success_count}/{len(results)}")
    
    if success_count == len(results):
        print("\\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! Telegram API –¥–æ—Å—Ç—É–ø–µ–Ω.")
    elif success_count >= 2:
        print("\\n‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º.")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("   - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å Telegram —Å–µ—Ä–≤–µ—Ä–∞–º–∏")
        print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
    else:
        print("\\nüö® –°–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º!")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞")
        print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN")
        print("   - –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")

if __name__ == '__main__':
    main()