version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  matching-service:
    build:
      context: ../connectbot-java-services/matching-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:h2:mem:testdb"
      SERVICE_AUTH_TOKEN: "${SERVICE_AUTH_TOKEN}"
      MATCHING_DATAAPI_URL: "${MATCHING_DATAAPI_URL:-http://web:8000}"
      DATAAPI_BASE_URL: "${MATCHING_DATAAPI_URL:-http://web:8000}"
      DATAAPI_SERVICE_TOKEN: "${SERVICE_AUTH_TOKEN}"

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../:/app:delegated
    ports:
      - "8000:8000"
    environment:
      DEBUG: "1"
      MATCHING_SERVICE_URL: "http://matching-service:8081"
      REDIS_URL: "redis://redis:6379/0"
      SERVICE_AUTH_TOKEN: "${SERVICE_AUTH_TOKEN}"
      METRICS_TRIGGER_TOKEN: "${METRICS_TRIGGER_TOKEN}"
      TELEGRAM_BOT_TOKEN: "${TELEGRAM_BOT_TOKEN}"
    depends_on:
      - matching-service
      - redis

  bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python manage.py runbot
    volumes:
      - ../:/app:delegated
    environment:
      DEBUG: "1"
      MATCHING_SERVICE_URL: "http://matching-service:8081"
      REDIS_URL: "redis://redis:6379/0"
      SERVICE_AUTH_TOKEN: "${SERVICE_AUTH_TOKEN}"
      METRICS_TRIGGER_TOKEN: "${METRICS_TRIGGER_TOKEN}"
      TELEGRAM_BOT_TOKEN: "${TELEGRAM_BOT_TOKEN}"
    depends_on:
      - web
      - matching-service
      - redis

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - web
      - matching-service

networks:
  default:
    driver: bridge
