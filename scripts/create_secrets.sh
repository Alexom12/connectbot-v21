#!/usr/bin/env bash
# scripts/create_secrets.sh
# Simple helper to create either a protected .env or Docker secrets (swarm) interactively.
set -euo pipefail
MODE=${1:-env}
PROJECT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
cd "$PROJECT_DIR"

read -r -p "SERVICE_AUTH_TOKEN (leave blank to generate random): " SERVICE_AUTH_TOKEN_IN
if [ -z "$SERVICE_AUTH_TOKEN_IN" ]; then
  SERVICE_AUTH_TOKEN_IN=$(openssl rand -hex 24)
  echo "Generated SERVICE_AUTH_TOKEN"
fi
read -r -p "SECRET_KEY (leave blank to generate random): " SECRET_KEY_IN
if [ -z "$SECRET_KEY_IN" ]; then
  SECRET_KEY_IN=$(openssl rand -hex 32)
  echo "Generated SECRET_KEY"
fi
read -r -p "TELEGRAM_BOT_TOKEN (optional): " TELEGRAM_BOT_TOKEN_IN

if [ "$MODE" = "env" ]; then
  cat > .env <<EOF
# Autogenerated .env (DO NOT COMMIT)
SERVICE_AUTH_TOKEN=$SERVICE_AUTH_TOKEN_IN
SECRET_KEY=$SECRET_KEY_IN
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN_IN
EOF
  chmod 600 .env
  echo ".env created and chmod 600 applied"
  exit 0
fi

if [ "$MODE" = "secrets" ]; then
  # Requires docker swarm initialized
  if ! docker info >/dev/null 2>&1; then
    echo "Docker does not look available or you are not logged in. Exiting."
    exit 1
  fi
  echo "$SERVICE_AUTH_TOKEN_IN" | docker secret create service_auth_token - || docker secret rm service_auth_token >/dev/null 2>&1 || true
  echo "$SECRET_KEY_IN" | docker secret create django_secret_key - || docker secret rm django_secret_key >/dev/null 2>&1 || true
  if [ -n "$TELEGRAM_BOT_TOKEN_IN" ]; then
    echo "$TELEGRAM_BOT_TOKEN_IN" | docker secret create telegram_bot_token - || docker secret rm telegram_bot_token >/dev/null 2>&1 || true
  fi
  echo "Docker secrets created (service_auth_token, django_secret_key, telegram_bot_token if provided)"
  exit 0
fi

echo "Unknown mode. Usage: $0 [env|secrets]"
exit 2
