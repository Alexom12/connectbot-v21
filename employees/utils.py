"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
"""
import logging
from asgiref.sync import sync_to_async
from django.conf import settings
from .models import Employee, EmployeeInterest, Interest

logger = logging.getLogger(__name__)


class AuthManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
    
    @staticmethod
    @sync_to_async
    def authorize_employee(telegram_user):
        """
        –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –¥–∞–Ω–Ω—ã–º Telegram
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (employee, is_new_authorization)
        """
        try:
            employee = Employee.find_by_telegram_data(telegram_user)
            
            if not employee:
                return None, False
            
            # –û–±–Ω–æ–≤–ª—è–µ–º Telegram –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            is_updated = employee.update_telegram_data(telegram_user)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            if not employee.authorized:
                employee.authorized = True
                employee.save(update_fields=['authorized', 'last_activity'])
                return employee, True
            else:
                employee.save(update_fields=['last_activity'])
                return employee, False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {e}")
            return None, False
    
    @staticmethod
    @sync_to_async 
    def get_unauthorized_message():
        """–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        return f"""
üîê *–î–æ—Å—Ç—É–ø –∫ ConnectBot –æ–≥—Ä–∞–Ω–∏—á–µ–Ω*

–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∫–æ–º–ø–∞–Ω–∏–∏.

–ï—Å–ª–∏ –≤—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏:

1. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
2. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à Telegram: @{{username}}

üìû *–ö–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*
@{settings.ADMIN_USERNAME or 'hr_admin'} (–ò—Ä–∏–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞)

–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ email: {settings.ADMIN_EMAIL or 'hr@company.com'}

–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
"""
    
    @staticmethod
    @sync_to_async
    def get_welcome_message(employee):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        interests_count = EmployeeInterest.objects.filter(
            employee=employee, 
            is_active=True
        ).count()
        
        return f"""
üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {employee.full_name.split()[0]}!*

–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ ConnectBot!

üìä *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:*
‚Ä¢ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {employee.position or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
‚Ä¢ –û—Ç–¥–µ–ª: {employee.department.name if employee.department else '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –ë–¶: {employee.business_center.name if employee.business_center else '–ù–µ —É–∫–∞–∑–∞–Ω'}

üéØ *–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:* {interests_count}

–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /preferences
–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: /menu

–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏! üöÄ
"""


class PreferenceManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏"""
    
    @staticmethod
    @sync_to_async
    def get_employee_interests(employee):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
        return list(EmployeeInterest.objects.filter(
            employee=employee
        ).select_related('interest'))
    
    @staticmethod
    @sync_to_async
    def get_all_interests():
        """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã"""
        return list(Interest.objects.filter(is_active=True))
    
    @staticmethod
    @sync_to_async
    def update_employee_interests(employee, interest_codes):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã
            all_interests = Interest.objects.filter(is_active=True)
            interest_dict = {interest.code: interest for interest in all_interests}
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            current_interests = EmployeeInterest.objects.filter(employee=employee)
            current_dict = {ei.interest.code: ei for ei in current_interests}
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã
            for interest_code, interest in interest_dict.items():
                if interest_code in interest_codes:
                    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–µ—Å
                    if interest_code in current_dict:
                        ei = current_dict[interest_code]
                        if not ei.is_active:
                            ei.is_active = True
                            ei.save()
                    else:
                        EmployeeInterest.objects.create(
                            employee=employee,
                            interest=interest,
                            is_active=True
                        )
                else:
                    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–µ—Å
                    if interest_code in current_dict:
                        ei = current_dict[interest_code]
                        if ei.is_active:
                            ei.is_active = False
                            ei.save()
            
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤: {e}")
            return False
    
    @staticmethod
    @sync_to_async
    def disable_all_interests(employee):
        """–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤"""
        try:
            EmployeeInterest.objects.filter(employee=employee).update(is_active=False)
            return True
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤: {e}")
            return False